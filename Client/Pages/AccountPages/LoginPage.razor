@page "/identity/account/login"
@using Client.Pages.OtherPages
@using Syncfusion.Blazor.Popups
@layout AuthenticationLayout
@inject SfDialogService DialogService
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <EditForm Enhance Model="User" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <div class="card bg-dark bg-opacity-75 rounded-3 text-light fw-bold">
                    <div class="card-header border-0 text-center">Login</div>
                    <div class="container">
                        <div class="row justify-content-center">
                            <div class="col-lg-3 col-md-4 col-sm-4">
                                <img src="images/logo/logo.svg" class="img-fluid" alt="logo" />
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mt-1">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="User.Email" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-1">
                            <label class="form-label">Password</label>
                            <input type="password" @bind="User.Password" class="form-control"></input>
                        </div>
                        <div class="form-group mt-1">
                            @if (ShowLodingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Login</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer border-0">
                        <span class="text-center">
                            Don't have an account? | <a href="/identity/account/register">Register</a>
                        </span>
                        <ValidationSummary />
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public bool ShowLodingButton { get; set; } = false;
    Login User = new();

    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleLogin()
    {
        ShowLodingButton = true;
        var result = await accountService.SignInAsync(User);
        if (result.Flag)
        {
            await DisplayDialog(result.Message, "Login Success");
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession() 
            { Token = result.Token, RefreshToken = result.RefreshToken });
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            await DisplayDialog(result.Message, "Alert");
        }

        ShowLodingButton = false;
    }

    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
        {
            NavManager.NavigateTo("/home/dashboard");
        }
    }
}
